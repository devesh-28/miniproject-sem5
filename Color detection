#impoting open cv and pandas
import cv2
import pandas as pd1

#copying the path of image and csv file
image_path = 'open cv/pic6.jpg'
Dataset_path = 'open cv/colors.csv'

# taking input from csv file
index = ['color', 'color_name', 'hex', 'R', 'G', 'B']
df = pd1.read_csv(Dataset_path, names=index, header=None)

# reading the image
image = cv2.imread(image_path)
image = cv2.resize(image, (900,600))

clicked = False
red = green = blue = X_position = Y_position = 0

# function tho calculate the minimum colour
def get_color_name(Red,Green,Blue):
	minimum = 1000
	for i in range(len(df)):
		d = abs(Red - int(df.loc[i,'R'])) + abs(Green - int(df.loc[i,'G'])) + abs(Blue - int(df.loc[i,'B']))
		if d <= minimum:
			minimum = d
			cname = df.loc[i, 'color_name']

	return cname

# to get the coordinates when mouse is clicked on a particular position
def draw_function(event, x, y, flags, params):
	if event == cv2.EVENT_LBUTTONDBLCLK:
		global blue, green, red, X_position, Y_position, clicked
		clicked = True
		X_position = x
		Y_position = y
		blue,green,red = image[y,x]
		blue = int(blue)
		green = int(green)
		red = int(red)

# window with a image named image
cv2.namedWindow('image')
cv2.setMouseCallback('image', draw_function)

while True:
	cv2.imshow('image', image)
	if clicked:
		
		cv2.rectangle(image, (20,20), (600,60), (blue,green,red), -1)

		#Creating text string to display( Color name and RGB values )
		text = get_color_name(red,green,blue)
		#cv2.putText(image,text,start,font(0-7),fontScale,color,thickness,lineType )
		cv2.putText(image, text, (50,50), 2,1, (255,255,255),2,cv2.LINE_AA)

		#For very light colours we will display text in black colour
		if red+green+blue >=600:
			cv2.putText(image, text, (50,50), 2,1, (0,0,0),2,cv2.LINE_AA)

	if cv2.waitKey(20) & 0xFF == 27:
		break

cv2.destroyAllWindows()
